using System;
using ShellFiler.Api;
using ShellFiler.Command;
using ShellFiler.FileViewer;

namespace ShellFiler.Command.FileViewer {
    
    //=========================================================================================
    // クラス：キー、ツールバーなどのイベントを受けて実行するテキストファイルビューア用のコマンド
    //=========================================================================================
    public abstract class FileViewerActionCommand : ActionCommand {
        // ファイルビューア
        private TextFileViewer m_textFileViewer;
        
        //=========================================================================================
        // 機　能：コンストラクタ
        // 引　数：なし
        // 戻り値：なし
        //=========================================================================================
        public FileViewerActionCommand() {
        }

        //=========================================================================================
        // 機　能：パラメータをセットする
        // 引　数：[in]param  セットするパラメータ
        // 戻り値：なし
        //=========================================================================================
        public virtual void SetParameter(params object[] param) {
        }

        //=========================================================================================
        // 機　能：初期化する
        // 引　数：[in]textViewer テキストファイルビューア
        // 　　　　[in]keyEvt     キー入力イベント（キー起因ではないときnull）
        // 戻り値：なし
        //=========================================================================================
        public void Initialize(TextFileViewer textViewer, KeyCommand keyEvt) {
            m_textFileViewer = textViewer;
        }

        //=========================================================================================
        // 機　能：機能を実行する
        // 引　数：[in]param パラメータ
        // 戻り値：実行結果
        //=========================================================================================
        public abstract object Execute();

        //=========================================================================================
        // プロパティ：テキストビューア
        //=========================================================================================
        public TextFileViewer TextFileViewer {
            get {
                return m_textFileViewer;
            }
        }

        //=========================================================================================
        // プロパティ：ビューアが利用可能かどうかを調べる
        //=========================================================================================
        public bool Abailable {
            get {
                return (m_textFileViewer.TextBufferLineInfo.LogicalLineCount > 0);
            }
        }

        //=========================================================================================
        // プロパティ：ビューア部分の実装
        //=========================================================================================
        public IViewerComponent ViewerComponent {
            get {
                return m_textFileViewer.TextViewerComponent;
            }
        }

        //=========================================================================================
        // プロパティ：コマンドのUI表現
        //=========================================================================================
        public abstract UIResource UIResource {
            get;
        }
    }
}
