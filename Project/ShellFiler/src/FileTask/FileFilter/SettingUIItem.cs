using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Windows.Forms;
using System.Drawing;
using ShellFiler.Api;
using ShellFiler.Document;
using ShellFiler.Document.Setting;
using ShellFiler.FileSystem;
using ShellFiler.Properties;
using ShellFiler.UI.FileList;
using ShellFiler.Util;

namespace ShellFiler.FileTask.FileFilter {

    //=========================================================================================
    // クラス：フィルターコンポーネントの設定UIの項目
    // ショートカットに使用できない文字はADFGLRSTU1234
    //=========================================================================================
    public class SettingUIItem {

        //=========================================================================================
        // 機　能：コンストラクタ
        // 引　数：なし
        // 戻り値：なし
        //=========================================================================================
        public SettingUIItem() {
        }

        //=========================================================================================
        // プロパティ：空行
        //=========================================================================================
        public class Space : SettingUIItem {
        }

        //=========================================================================================
        // クラス：ラベル
        //=========================================================================================
        public class Label : SettingUIItem {
            // テキスト
            private string m_text;

            // インデントの深さ（0～）
            private int m_indent;

            //=========================================================================================
            // 機　能：コンストラクタ
            // 引　数：[in]text    テキスト
            // 　　　　[in]indent  インデントの深さ（0～）
            // 戻り値：なし
            //=========================================================================================
            public Label(string text, int indent) {
                m_text = text;
                m_indent = indent;
            }

            //=========================================================================================
            // プロパティ：テキスト
            //=========================================================================================
            public string Text {
                get {
                    return m_text;
                }
            }

            //=========================================================================================
            // プロパティ：インデントの深さ（0～）
            //=========================================================================================
            public int Indent {
                get {
                    return m_indent;
                }
            }
        }

        //=========================================================================================
        // クラス：テキストボックス
        //=========================================================================================
        public class TextBox : SettingUIItem {
            // ラベルのテキスト
            private string m_labelText;

            // コントロールのID
            private string m_controlId;

            //=========================================================================================
            // 機　能：コンストラクタ
            // 引　数：[in]labelText  ラベルのテキスト
            // 　　　　[in]controlId  コントロールのID
            // 戻り値：なし
            //=========================================================================================
            public TextBox(string labelText, string controlId) {
                m_labelText = labelText;
                m_controlId = controlId;
            }

            //=========================================================================================
            // プロパティ：ラベルのテキスト
            //=========================================================================================
            public string LabelText {
                get {
                    return m_labelText;
                }
            }

            //=========================================================================================
            // プロパティ：コントロールのID
            //=========================================================================================
            public string ControlId {
                get {
                    return m_controlId;
                }
            }
        }

        //=========================================================================================
        // クラス：コンボボックス
        //=========================================================================================
        public class Combobox : SettingUIItem {
            // ラベルのテキスト
            private string m_labelText;

            // コントロールのID
            private string m_controlId;

            // 選択項目の表示名一覧
            private string[] m_itemList;

            // 選択項目のID一覧
            private string[] m_idList;

            //=========================================================================================
            // 機　能：コンストラクタ
            // 引　数：[in]labelText  ラベルのテキスト
            // 　　　　[in]controlId  コントロールのID
            // 　　　　[in]itemList   項目の表示名一覧
            // 　　　　[in]idList     項目のID一覧
            // 戻り値：なし
            //=========================================================================================
            public Combobox(string labelText, string controlId, string[] itemList, string[] idList) {
                m_labelText = labelText;
                m_controlId = controlId;
                m_itemList = itemList;
                m_idList = idList;
            }

            //=========================================================================================
            // プロパティ：ラベルのテキスト
            //=========================================================================================
            public string LabelText {
                get {
                    return m_labelText;
                }
            }

            //=========================================================================================
            // プロパティ：コントロールのID
            //=========================================================================================
            public string ControlId {
                get {
                    return m_controlId;
                }
            }

            //=========================================================================================
            // プロパティ：項目の表示名一覧
            //=========================================================================================
            public string[] ItemList {
                get {
                    return m_itemList;
                }
            }

            //=========================================================================================
            // プロパティ：項目のID一覧
            //=========================================================================================
            public string[] IdList {
                get {
                    return m_idList;
                }
            }
        }

        //=========================================================================================
        // クラス：チェックボックス
        //=========================================================================================
        public class Checkbox : SettingUIItem {
            // ラベルのテキスト
            private string m_labelText;

            // コントロールのID
            private string m_controlId;

            //=========================================================================================
            // 機　能：コンストラクタ
            // 引　数：[in]labelText     ラベルのテキスト
            // 　　　　[in]controlId     コントロールのID
            // 戻り値：なし
            //=========================================================================================
            public Checkbox(string labelText, string controlId) {
                m_labelText = labelText;
                m_controlId = controlId;
            }

            //=========================================================================================
            // プロパティ：ラベルのテキスト
            //=========================================================================================
            public string LabelText {
                get {
                    return m_labelText;
                }
            }

            //=========================================================================================
            // プロパティ：コントロールのID
            //=========================================================================================
            public string ControlId {
                get {
                    return m_controlId;
                }
            }
        }

        //=========================================================================================
        // クラス：数値入力
        //=========================================================================================
        public class Numeric : SettingUIItem {
            // ラベルのテキスト
            private string m_labelText;

            // コントロールのID
            private string m_controlId;

            // 最小値
            private int m_minValue;

            // 最大値
            private int m_maxValue;

            //=========================================================================================
            // 機　能：コンストラクタ
            // 引　数：[in]labelText     ラベルのテキスト
            // 　　　　[in]controlId     コントロールのID
            // 　　　　[in]minValue      最小値
            // 　　　　[in]maxValue      最大値
            // 戻り値：なし
            //=========================================================================================
            public Numeric(string labelText, string controlId, int minValue, int maxValue) {
                m_labelText = labelText;
                m_controlId = controlId;
                m_minValue = minValue;
                m_maxValue = maxValue;
            }

            //=========================================================================================
            // プロパティ：ラベルのテキスト
            //=========================================================================================
            public string LabelText {
                get {
                    return m_labelText;
                }
            }

            //=========================================================================================
            // プロパティ：コントロールのID
            //=========================================================================================
            public string ControlId {
                get {
                    return m_controlId;
                }
            }

            //=========================================================================================
            // プロパティ：最小値
            //=========================================================================================
            public int MinValue {
                get {
                    return m_minValue;
                }
            }

            //=========================================================================================
            // プロパティ：最大値
            //=========================================================================================
            public int MaxValue {
                get {
                    return m_maxValue;
                }
            }
        }
    }
}
