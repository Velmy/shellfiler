using System;
using System.Collections;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Windows.Forms;
using System.Reflection;
using System.Threading;
using System.Text;
using ShellFiler.Api;
using ShellFiler.Properties;
using ShellFiler.Document;
using ShellFiler.Command;
using ShellFiler.Command.FileViewer;
using ShellFiler.Util;
using ShellFiler.UI;
using ShellFiler.Locale;

namespace ShellFiler.MonitoringViewer {

    //=========================================================================================
    // クラス：モニタリングビューアのコンポーネント本体
    //=========================================================================================
    public interface IMonitoringViewer {

        //=========================================================================================
        // 機　能：再読込を行う
        // 引　数：[in]dataStore   プロセス一覧の解析結果
        // 戻り値：なし
        //=========================================================================================
        void Reload(LinuxSpaceSeparateValueStore dataStore);

        //=========================================================================================
        // 機　能：UIパネルを作成する
        // 引　数：[in]form   フォーム
        // 戻り値：作成したパネル
        //=========================================================================================
        UserControl CreateMonitorPanel(MonitoringViewerForm form);

        //=========================================================================================
        // 機　能：フォームが閉じられるときの処理を行う
        // 引　数：なし
        // 戻り値：なし
        //=========================================================================================
        void OnFormClosed();

        //=========================================================================================
        // 機　能：表示する値の読み込みが終わったときの処理を行う
        // 引　数：[in]data       受信結果（エラーのときnull）
        // 　　　　[in]encoding   dataのエンコード方式
        // 　　　　[in]errorInfo  エラー情報（成功のときnull）
        // 戻り値：なし
        //=========================================================================================
        void OnParseCompleted(byte[] data, Encoding encoding, string errorInfo);

        //=========================================================================================
        // プロパティ：モニタリングビューアの動作モード
        //=========================================================================================
        MonitoringViewerMode Mode {
            get;
        }

        //=========================================================================================
        // プロパティ：モニタリングビューアのフォーム
        //=========================================================================================
        MonitoringViewerForm MonitoringViewerForm {
            get;
        }

        //=========================================================================================
        // プロパティ：ウィンドウのタイトル
        //=========================================================================================
        string Title {
            get;
        }

        //=========================================================================================
        // プロパティ：ビューが利用可能なときtrue
        //=========================================================================================
        bool Available {
            get;
        }

        //=========================================================================================
        // プロパティ：処理対象のデータ
        //=========================================================================================
        MatrixData MatrixData {
            get;
        }

        //=========================================================================================
        // プロパティ：結果を表示するビュー（初期化するまではnull）
        //=========================================================================================
        MatrixDataView MatrixDataView {
            get;
        }

        //=========================================================================================
        // プロパティ：コマンドの再試行情報
        //=========================================================================================
        CommandRetryInfo RetryInfo {
            get;
        }
    }
}
