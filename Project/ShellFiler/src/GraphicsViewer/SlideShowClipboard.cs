using System;
using System.Collections.Generic;
using System.IO;
using System.Drawing;
using ShellFiler.Api;
using ShellFiler.FileViewer;
using ShellFiler.Properties;

namespace ShellFiler.GraphicsViewer {
    
    //=========================================================================================
    // クラス：スライドショーで表示対象の画像一覧
    //=========================================================================================
    public class SlideShowClipboard : ISlideShowList {
        // 表示する画像
        private ImageInfo m_targetImage;

        //=========================================================================================
        // 機　能：コンストラクタ
        // 引　数：[in]gvParam   グラフィックビューアの起動パラメータ
        // 戻り値：なし
        //=========================================================================================
        public SlideShowClipboard(GraphicsViewerParameter gvParam) {
            m_targetImage = gvParam.ForClipBoardViewer.TargetImage;
        }

        //=========================================================================================
        // 機　能：すべての読み込み済みの画像の情報を破棄する
        // 引　数：なし
        // 戻り値：なし
        //=========================================================================================
        public void DisposeAllImage() {
            m_targetImage.DisposeImage();
            m_targetImage = null;
        }

        //=========================================================================================
        // 機　能：ファイルの読み込みの結果を通知する
        // 引　数：[in]imageInfo  読み込んだ画像の情報
        // 戻り値：なし
        //=========================================================================================
        public void NotifyFileLoad(ImageInfo imageInfo) {
        }

        //=========================================================================================
        // 機　能：スライドショーで次の画像の切り替えをリクエストする
        // 引　数：[in]forward            順方向に切り替えるときtrue
        // 　　　　[out]showImage         表示する画像（表示するものがないときnull）
        // 　　　　[out]nextLoadImageList 次の表示のためにバックグラウンド読み込みする画像
        // 戻り値：次の画像に変更できるときtrue
        //=========================================================================================
        public bool GetNextSlide(bool forward, out ImageInfo showImage, out List<ImageInfo> nextLoadImageList) {
            showImage = null;
            nextLoadImageList = null;
            return false;
        }

        //=========================================================================================
        // 機　能：スライドショーモードであることを設定する
        // 引　数：なし
        // 戻り値：なし
        //=========================================================================================
        public void SetSlideShowMode() {
        }

        //=========================================================================================
        // プロパティ：スライドショーモードのときtrue
        //=========================================================================================
        public bool IsSlideShowMode {
            get {
                return false;
            }
        }

        //=========================================================================================
        // プロパティ：すべての画像の枚数（最初と最後のメッセージを含む）
        //=========================================================================================
        public int AllImageCount {
            get {
                return 1;
            }
        }

        //=========================================================================================
        // プロパティ：画像一覧（最初と最後のメッセージを含む、クリップボードビューアのときnull）
        //=========================================================================================
        public ImageInfo[] AllImages {
            get {
                return null;
            }
        }

        //=========================================================================================
        // プロパティ：現在表示中の画像のインデックス
        //=========================================================================================
        public int CurrentIndex {
            get {
                return 0;
            }
        }

        //=========================================================================================
        // プロパティ：現在表示中の画像
        //=========================================================================================
        public ImageInfo CurrentImage {
            get {
                return m_targetImage;
            }
        }
    }
}
