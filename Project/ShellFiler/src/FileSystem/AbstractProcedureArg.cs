using System;
using System.Collections.Generic;
using System.Text;
using ShellFiler.Api;

namespace ShellFiler.FileSystem {

    //=========================================================================================
    // クラス：バックグラウンド処理用リクエスト/レスポンス
    //=========================================================================================
    public abstract class AbstractProcedureArg {
        // [in]コンテキスト情報
        private FileOperationRequestContext m_cache;

        // [out]ステータスコード
        private FileOperationStatus m_context = null;

        //=========================================================================================
        // 機　能：コンストラクタ
        // 引　数：[in]cache  コンテキスト情報
        // 戻り値：なし
        //=========================================================================================
        public AbstractProcedureArg(FileOperationRequestContext cache) {
            m_cache = cache;
        }

        //=========================================================================================
        // プロパティ：このリクエストを非同期に実行するときtrue（戻りを待たなくてよいときtrue）
        //=========================================================================================
        public virtual bool IsAsyncRequest {
            get {
                return false;
            }
        }

        //=========================================================================================
        // プロパティ：[in,out]コンテキスト情報
        //=========================================================================================
        public FileOperationRequestContext RequestContext {
            get {
                return m_cache;
            }
        }

        //=========================================================================================
        // プロパティ：[out]このリクエストに対するレスポンス（処理後に設定、存在しない場合はnull）
        //=========================================================================================
        public FileOperationStatus Status {
            get {
                return m_context;
            }
            set {
                m_context = value;
            }
        }
    }
}
