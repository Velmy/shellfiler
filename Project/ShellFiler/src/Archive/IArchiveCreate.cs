using System.Collections.Generic;
using ShellFiler.Api;
using ShellFiler.FileTask;
using ShellFiler.FileTask.Provider;

namespace ShellFiler.Archive {

    //=========================================================================================
    // クラス：ファイルの展開を行うインターフェース
    //=========================================================================================
    public interface IArchiveCreate {

        //=========================================================================================
        // 機　能：アーカイブを閉じる
        // 引　数：[in]status  直前までの処理の結果
        // 戻り値：ステータス（失敗時はアーカイブ使用不可）
        //=========================================================================================
        FileOperationStatus CloseArchive(FileOperationStatus status);
        
        //=========================================================================================
        // 機　能：アーカイブファイルを作成する
        // 引　数：なし
        // 戻り値：ステータス
        //=========================================================================================
        FileOperationStatus CreateNew();

        //=========================================================================================
        // 機　能：ファイルを更新する
        // 引　数：[in]task      ログ出力先のタスク
        // 　　　　[in]baseDir   圧縮対象のファイルとフォルダのベースディレクトリ
        // 　　　　[in]allList   対象ファイル一覧
        // 　　　　[in]progress  進捗情報表示用のインターフェース
        // 戻り値：ステータス
        //=========================================================================================
        FileOperationStatus UpdateFiles(IBackgroundTask task, string baseDir, List<ArchiveFileDirectoryInfo> allList, FileProgressEventHandler progress);

        //=========================================================================================
        // プロパティ：最終のアーカイブファイル名
        //=========================================================================================
        string ArchiveFileNameFinal {
            get;
        }
    }
}
