using System;
using System.Collections.Generic;
using System.Text;
using System.Drawing;
using System.Windows.Forms;
using ShellFiler.Api;
using ShellFiler.Document;
using ShellFiler.FileSystem;
using ShellFiler.Util;
using ShellFiler.UI;
using ShellFiler.UI.Log;

namespace ShellFiler.Archive {

    //=========================================================================================
    // クラス：仮想フォルダのファイル一覧の取得を行うインターフェース
    //=========================================================================================
    public interface IArchiveVirtualFileList {

        //=========================================================================================
        // 機　能：破棄する
        // 引　数：なし
        // 戻り値：なし
        //=========================================================================================
        void Dispose();
        
        //=========================================================================================
        // 機　能：アーカイブファイルを開く
        // 引　数：[in]displayPath       作業対象としてログに表示するパス名
        // 　　　　[out]internalArcName  内部アーカイブのファイル名を返す変数（null以外のときはFile.Delete()が必要）
        // 　　　　[in]logger            ログ出力インターフェース
        // 戻り値：ステータス
        //=========================================================================================
        FileOperationStatus Open(string displayPath, out string internalArcName, ITaskLogger logger);

        //=========================================================================================
        // 機　能：アーカイブ内のファイルとフォルダの数を返す
        // 引　数：なし
        // 戻り値：ファイルとフォルダの数
        //=========================================================================================
        int GetFileCount();

        //=========================================================================================
        // 機　能：ファイル情報を返す
        // 引　数：[in]index  取得するインデックス
        // 戻り値：ファイル情報
        //=========================================================================================
        IArchiveContentsFileInfo GetFileInfo(int index);

        //=========================================================================================
        // 機　能：ファイルを展開する
        // 引　数：[in]index         取得するインデックス
        // 　　　　[in]destFilePath  対象ファイルのパス
        // 　　　　[in]progress      進捗情報表示用のインターフェース
        // 戻り値：ファイル情報
        //=========================================================================================
        FileOperationStatus Extract(int index, string destFilePath, FileProgressEventHandler progress);

        //=========================================================================================
        // プロパティ：アーカイブファイル名
        //=========================================================================================
        string ArchiveFileName {
            get;
        }

        //=========================================================================================
        // プロパティ：使用したパスワードに対応する表示名（パスワードが自動入力でないときはnull）
        //=========================================================================================
        string UsedPasswordDisplayName {
            get;
        }

        //=========================================================================================
        // プロパティ：使用したパスワード（パスワード入力済みでないときはnull）
        //=========================================================================================
        string UsedPassword {
            get;
        }
    }
}
